type Query {
    user: User!
    posts: [Post]!
    publicPosts: [Post]!
    hello: String!
}

type Mutation {
    signup(email: String!, password: String!): User!
    login(email: String!, password: String!): User!
    createPost(title: String, body: String): Post!
    editPost(_id: ID!, title: String, body: String, published: Boolean): Post!
    deletePost(_id: ID!): Post!
    createComment(postId: ID!, parentId: ID, text: String!): Comment!
    editComment(_id: ID!, text: String!): Comment!
    deleteComment(_id: ID!): Comment!
}

type Subscription {
    count: Int!
}

type User {
    _id: ID!
    email: String!
    authToken: String
    posts: [Post]!
}

type Post {
    _id: ID!
    title: String!
    body: String!
    published: Boolean!
    author: User!
    comments: [Comment]!
}

type Comment {
    _id: ID!
    text: String!
    parent: Comment
    post: Post!
    author: User!
}